一.redis单线程的定义:redis的网络IO和键值对读写由同一个线程完成,其实其持久化,异步删除,集群同步等都是额外线程执行
二.redis为什么使用单线程:使用多线程并发的话需要精妙的并发访问控制,这会降低系统代码的易调试性和可维护性
三.redis单线程快的原因；
    1.redis的大部分操作都能在内存完成
    2.redis底层有着搞笑的数据结构(hash表和跳表)
    3.redis网络IO采用了多路复用机制(epoll),使其能并发处理大量的客户端请求
