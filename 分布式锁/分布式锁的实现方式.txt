一.分布式锁的要求:
    1.保证分布式集群中,同一个方法,同一时间只能被一台机器上的一个线程执行
    2.这把锁要可重入
    3.锁最好是阻塞的
    4.有高可用的获得锁和释放锁的能力
    5.获得锁和释放锁的性能要好
二.实现方式:
    1.基于数据库表:
        a.插入数据实现:抢占锁的时候,就对数据进行插入,释放锁的时候就删除插入的数据
            问题:       
                功能依赖数据库可用性,数据库是一个单点,如果挂了,则业务系统不可用
                没有失效时间,如果在持有锁的期间,机器挂掉了,则会一直持有锁,其他线程无法再次获得锁
                锁是非阻塞的,因为数据库如果插入失败会直接返回报错
                锁是非重入的,因为数据已经存在,同一个线程也不能再次获得锁了
        b.通过查询语句加for update当前读实现:加锁操作就是执行当前读,解锁操作就是对当前读进行commit提交
            优点:
                a.是阻塞锁,当其他线程同样执行当前读发现存在锁时,会等待锁释放
                b.拥有失效时间:如果持有锁期间,机器挂掉,mysql会自动释放锁
            问题:
                a.还是无法重入
                b.还是单点数据库   
                c.有可能出现mysql不走索引的请况
    2.基于缓存实现分布式锁:加锁时就是数据写入内存,释放锁时就是清除数据
        问题:
            没有失效时间,或不知道缓存失效时间设置为多少
            锁是非重入的
            锁是非阻塞的
    3.基于zookeeper实现的分布式锁:加锁就是向zookeeper申请一个暂时有序节点,申请到Znode编号最小的主机得到锁,释放锁就是断开zookeeper的客户端连接
        优点:
            1.主机持有锁期间如果挂掉,zookeeper会自动删除对应Znode,解锁    
            2.可重入:在申请Znode的时候可用将自己的信息写入Znode,下次加锁时,如果当前最小序号ZNode是自己的信息,则不申请,直接执行
            3.zookeeper是集群,没有单点故障

